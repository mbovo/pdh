# https://taskfile.dev

version: '3'

env:
  IMAGE_NAME: jackbit/pd


tasks:
  default:
    cmds:
      - task -l
    silent: true

  check:
    desc: Run all pre-commit hooks
    cmds:
      - pre-commit run -a

  virtualenv:
    cmds:
      - python3 -m venv .venv
    sources:
      - .venv/bin/activate
    generates:
      - .venv/bin/activate
    method: checksum

  install-pip:
    cmds:
      - |
        source .venv/bin/activate
        pip install --upgrade pip
        pip install -e ".[test]"
    sources:
      - requirements.txt
      - test-requirments.txt
      - version
    method: checksum

  pre-commit:
    cmds:
      - pre-commit install
    sources:
      - .git/hooks/pre-commit
      - .pre-commit-config.yaml
    generates:
      - .git/hooks/pre-commit
    method: checksum

  pre-commit-setup:
    cmds:
      - pip3 install pre-commit
    status:
      - which pre-commit

  poetry-setup:
    cmds:
      - pip3 install poetry
    status:
      - which poetry

  bootstrap:
    desc: Bootstrap of dev environment
    preconditions:
      - sh: "[ $(python3 --version | cut -d ' ' -f 2 | awk -F'.' '{print ($2 > 8) }') = 1 ]"
        msg: "Required python version not found (>=3.8)"
    cmds:
      - task: pre-commit-setup
      - task: poetry-setup
      - task: virtualenv  
      - task: install-pip
      - task: pre-commit

  test:
    desc: Run python test and coverage
    cmds:
      - pytest --cov=pdh .

  docker-build:
    desc: Build docker image
    cmds:
      - docker build -t $IMAGE_NAME:local -f containers/Dockerfile .

  build:
    desc: "Build python wheel"
    cmds:
      - python3 -m build

  clean:
    desc: Cleanup docker image
    cmds:
      - docker rmi -f $IMAGE_NAME:local
